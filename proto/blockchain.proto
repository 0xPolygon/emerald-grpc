syntax = "proto3";
package io.emeraldpay.api;
option java_package = "io.emeraldpay.api.proto";
import "common.proto";

service Blockchain {
    rpc StreamHead (Chain) returns (stream ChainHead) {}
    rpc StreamBalance (BalanceRequest) returns (stream AddressBalance) {}
    rpc StreamTxStatus (TxStatusRequest) returns (stream TxStatus) {}

    rpc GetBalance (BalanceRequest) returns (stream AddressBalance) {}

    rpc NativeCall (NativeCallRequest) returns (stream NativeCallReplyItem) {}
}

message NativeCallRequest {
    ChainRef chain = 1;
    repeated NativeCallItem items = 2;
}

message NativeCallItem {
    uint32 id = 1;
    string method = 2;
    string target = 3;
    bytes payload = 4;
}

message NativeCallReplyItem {
    uint32 id = 1;
    bool succeed = 2;
    bytes payload = 3;
    bytes error = 4;
}

message ChainHead {
    ChainRef chain = 1;
    uint64 height = 2;
    string block_id = 3;
    uint64 timestamp = 4;
    bytes weight = 5;
}

message TxStatusRequest {
    ChainRef chain = 1;
    string tx_id = 2;
    uint32 confirmation_limit = 3;
}

message TxStatus {
    string tx_id = 1;
    bool broadcasted = 2;
    bool mined = 3;
    BlockInfo block = 4;
    uint32 confirmations = 5;
}

message BalanceRequest {
    Asset asset = 1;
    AnyAddress address = 2;
}

message AddressBalance {
    Asset asset = 1;
    SingleAddress address = 2;
    string balance = 3;
}